{"version":3,"file":"delon-util-pipes-format.js","sources":["../../../../packages/util/pipes/format/mask.pipe.ts","../../../../packages/util/pipes/format/module.ts","../../../../packages/util/pipes/format/delon-util-pipes-format.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatMask, FormatMaskOption } from '@delon/util/format';\n\n@Pipe({ name: 'mask' })\nexport class FormatMaskPipe implements PipeTransform {\n  /**\n   * Format mask\n   *\n   * 格式化掩码\n   *\n   * | 字符 | 描述 |\n   * | --- | --- |\n   * | `0` | 任意数字，若该位置字符不符合，则默认为 `0` 填充 |\n   * | `9` | 任意数字 |\n   * | `#` | 任意字符 |\n   * | `U` | 转换大写 |\n   * | `L` | 转换小写 |\n   * | `*` | 转换为 `*` 字符 |\n   *\n   * ```ts\n   * formatMask('123', '(###)') => (123)\n   * formatMask('15900000000', '999****9999') => 159****0000\n   * ```\n   */\n  transform(value: string, mask: string | FormatMaskOption): string {\n    return formatMask(value, mask);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { FormatMaskPipe } from './mask.pipe';\n\nconst PIPES = [FormatMaskPipe];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES\n})\nexport class FormatPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;MAKa,cAAc;;;;;;;;;;;;;;;;;;;;IAoBzB,SAAS,CAAC,KAAa,EAAE,IAA+B;QACtD,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAChC;;;YAvBF,IAAI,SAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;;ACAtB,MAAM,KAAK,GAAG,CAAC,cAAc,CAAC,CAAC;MAMlB,gBAAgB;;;YAJ5B,QAAQ,SAAC;gBACR,YAAY,EAAE,KAAK;gBACnB,OAAO,EAAE,KAAK;aACf;;;ACTD;;;;;;"}